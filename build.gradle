plugins {
    id('java')
    id("maven-publish")
}

group 'disorg.soliloquy'
version '0.0.21'
description = 'Soliloquy Common Module'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(24)
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url = uri("https://maven.pkg.github.com/felix-t-morgenstern/soliloquy.common")
        credentials {
            username = 'felix-t-morgenstern'
            password = 'PASSWORD'
        }
    }
}

//noinspection DependencyNotationArgument
dependencies {
    implementation "disorg.soliloquy:soliloquy.specs:0.0.539"
    implementation "disorg.soliloquy:inaugural.soliloquy.tools:0.0.149"

    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    implementation("com.google.code.gson:gson:2.13.1")
    // https://mvnrepository.com/artifact/org.int4.dirk/dirk-di
    implementation("org.int4.dirk:dirk-di:1.0.0-beta1")

    // https://mvnrepository.com/artifact/org.mockito/mockito-core
    testImplementation("org.mockito:mockito-core:5.17.0")
    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-engine
    testImplementation("org.junit.jupiter:junit-jupiter-engine:5.12.2")
    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.12.2")
    // https://mvnrepository.com/artifact/org.junit.platform/junit-platform-launcher
    testImplementation("org.junit.platform:junit-platform-launcher:1.12.2")
    // https://central.sonatype.com/artifact/org.mockito/mockito-junit-jupiter
    testImplementation("org.mockito:mockito-junit-jupiter:5.17.0")
}

tasks.named('test', Test) {
    useJUnitPlatform()

    maxHeapSize = '1G'

    testLogging {
        events "passed"
    }
}

publishing {
    repositories {
        maven {
            name = "inaugural.soliloquy.common"
            url = uri("https://maven.pkg.github.com/felix-t-morgenstern/inaugural.soliloquy.common")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("SOLILOQUY_GITHUB_PUBLISH_USERNAME")
                password = project.findProperty("gpr.user") ?: System.getenv("SOLILOQUY_GITHUB_PUBLISH_TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}